## K-Means Clustering, Fuzzy k-means, EM 

library(tidyverse)
library(mvtnorm)
library(stats)
library(factoextra)
library(e1071)
library(EMCluster)
library(corrplot)
library(mixtools)

# Set seed and define variables from assignment
set.seed(42)
mu1 = c(2,0)
mu2 = c(-2,0)
sigma1 = matrix(c(1,0,0,1), nrow=2,ncol=2)

p = 0.5 * matrix(c(sqrt(3), -1, 1, sqrt(3)), nrow=2, ncol=2)
d = matrix(c(9,0,0,4), nrow=2,ncol=2)
sigma2 = p %*% d %*% t(p)

c1 = rmvnorm(1000, mu1, sigma1)
c2 = rmvnorm(1000, mu2, sigma2)

c1 = tibble(x=c1[,1], y=c1[,2], class=rep("c1", nrow(c1)))
c2 = tibble(x=c2[,1], y=c2[,2], class=rep("c2", nrow(c2)))
ds = rbind(c1,c2)
ds_df = ds[,1:2]

# Visualizing the data set 
fviz_nbclust(ds_df, kmeans, method = "wss")
ggplot(data=ds, aes(x=x, y=y, color=class)) +
  geom_point() + scale_color_manual(values = c('orange', 'purple')) + 
  labs(title = "k-means clusters")
ggplot(data=ds_k, aes(x=x, y=y, color=k_means_cluster)) +
  geom_point() + scale_color_manual(values = c('orange', 'purple', 'blue')) + 
  labs(title = "k-means clusters w/ k=3")


# K-Means Clustering
k = kmeans(ds_df, centers = 2, nstart=20)
k_3 = kmeans(ds_df, centers = 3, nstart=20)
ds_k = ds %>% add_column(k_means_cluster = as.factor(k_3$cluster))

k_3$totss
k_3$tot.withinss
k_3$size
k_3$centers
k_3$betweenss
fviz_cluster(k)
aggregate(ds_df, by=list(cluster = k$cluster), mean)

# Fuzzy k-means
fuzzy = cmeans(ds_df, centers = 3, iter.max=100, dist = "euclidean", m = 10)
fviz_cluster(list(data=ds_df, cluster=fuzzy$cluster),
             geom = "point",
             main = "Fuzzy K-Means with 3 Clusters and 10 degrees of fuzziness",
             ellipse.type = "norm", 
             ellipse.level = 0.7, 
             palette = "jco",
             ggtheme = theme_minimal())
fuzzy$size
fuzzy$withinerror

# EM Maximization 
emobj = simple.init(ds_df, nclass=2)
em = emcluster(ds_df, emobj = emobj, assign.class = TRUE)
summary(em)

em$p
?emcluster
fviz_cluster(list(data=ds_df, cluster=em$class),
             geom = "point", 
             main = "EM Maximization", 
             ellipse.type = "norm", 
             ellipse.level = 0.7, 
             palette = "jco",
             ggtheme = theme_minimal())